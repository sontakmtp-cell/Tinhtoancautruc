import React, { createContext, useContext, useState, ReactNode } from 'react';

export type Language = 'en' | 'vi';

type I18nContextValue = {
  lang: Language;
  setLang: (lang: Language) => void;
};

const I18nContext = createContext<I18nContextValue | undefined>(undefined);

export const LanguageProvider = ({ children, initial = 'en' as Language }: { children: ReactNode; initial?: Language }) => {
  const [lang, setLang] = useState<Language>(initial);
  return <I18nContext.Provider value={{ lang, setLang }}>{children}</I18nContext.Provider>;
};

export const useLanguage = () => {
  const ctx = useContext(I18nContext);
  if (!ctx) throw new Error('useLanguage must be used within LanguageProvider');
  return ctx;
};

// Simple dictionary keyed by English phrase for minimal intrusion
const dict: Record<Language, Record<string, string>> = {
  en: {},
  vi: {
    // Section titles
    'Section geometry': 'H\u00ECnh h\u1ECDc ti\u1EBFt di\u1EC7n',
    'Loading & material': 'T\u1EA3i tr\u1ECDng & v\u1EADt li\u1EC7u',
    'Safety checks': 'Ki\u1EC3m tra an to\u00E0n',
    'Calculation summary': 'T\u00F3m t\u1EAFt t\u00EDnh to\u00E1n',

    // Beam type tab labels
    'Single girder': 'D\u1EA7m \u0111\u01A1n',
    'Double girder': 'D\u1EA7m \u0111\u00F4i',
    'Rolled I-beam': 'D\u1EA7m I c\u00E1n',
    'V-type beam': 'D\u1EA7m d\u1EA1ng V',

    // Input labels
    'Bottom flange width b1': 'Chi\u1EC1u r\u1ED9ng c\u00E1nh d\u01B0\u1EDBi b1',
    'Top flange width b3': 'Chi\u1EC1u r\u1ED9ng c\u00E1nh tr\u00EAn b2',
    'Top flange width b': 'B\u1EC1 r\u1ED9ng c\u00E1nh tr\u00EAn b',
    'Section height h': 'Chi\u1EC1u cao d\u1EA7m H',
    'Top flange thickness t1': 'B\u1EC1 d\u00E0y c\u00E1nh tr\u00EAn t2',
    'Bottom flange thickness t2': 'B\u1EC1 d\u00E0y c\u00E1nh d\u01B0\u1EDBi t1',
    'Web thickness t3': 'B\u1EC1 d\u00E0y th\u00E2n t3',
    'Web spacing b2': 'R\u1ED9ng th\u00E2n b3',
    'Span length L': 'Kh\u1EA9u \u0111\u1ED9 d\u1EA7m L',
    'Hoist load': 'T\u1EA3i n\u00E2ng',
    'Trolley weight': 'Tr\u1ECDng l\u01B0\u1EE3ng xe con',
    'Uniform load q': 'T\u1EA3i ph\u00E2n b\u1ED1 \u0111\u1EC1u q',
    'Allowable stress': '\u1EE8ng su\u1EA5t cho ph\u00E9p',
    'Yield stress': 'Gi\u1EDBi h\u1EA1n ch\u1EA3y',
    'Elastic modulus E': 'M\u00F4 \u0111un \u0111\u00E0n h\u1ED3i E',
    'Poisson ratio (nu)': 'H\u1EC7 s\u1ED1 Poisson (\u03BD)',

    // Safety check labels
    'Stress check': 'Ki\u1EC3m tra \u1EE9ng su\u1EA5t',
    'Deflection': '\u0110\u1ED9 v\u00F5ng',
    'Buckling': '\u1ED0n \u0111\u1ECBnh',

    // Calculation summary labels
    'Area F': 'Di\u1EC7n t\u00EDch F',
    'Moment of inertia Jx': 'Momen qu\u00E1n t\u00EDnh Jx',
    'Moment of inertia Jy': 'Momen qu\u00E1n t\u00EDnh Jy',
    'Section modulus Wx': 'M\u00F4 \u0111un ch\u1ED1ng u\u1ED1n Wx',
    'Section modulus Wy': 'M\u00F4 \u0111un ch\u1ED1ng u\u1ED1n Wy',
    'Neutral axis Yc': 'Tr\u1EE5c trung h\u00F2a Yc',
    'Bending moment Mx': 'Momen u\u1ED1n Mx',
    'Stress sigma_u': '\u1EE8ng su\u1EA5t \u03C3_u',
    'Deflection f': '\u0110\u1ED9 v\u00F5ng f',

    // Diagrams & UI
    'Analysis diagrams': 'Bi\u1EC3u \u0111\u1ED3 ph\u00E2n t\u00EDch',
    'Internal Force Diagram (Bending Moment)': 'Bi\u1EC3u \u0111\u1ED3 n\u1ED9i l\u1EF1c (Momen u\u1ED1n)',
    'Internal Force Diagram (Shear Force)': 'Bi\u1EC3u \u0111\u1ED3 n\u1ED9i l\u1EF1c (L\u1EF1c c\u1EAFt)',
    'Stress Distribution Diagram': 'Bi\u1EC3u \u0111\u1ED3 ph\u00E2n b\u1ED1 \u1EE9ng su\u1EA5t',
    'Neutral Axis': 'Tr\u1EE5c trung h\u00F2a',
    'Material': 'V\u1EADt li\u1EC7u',
  },
};

export const translate = (lang: Language, key: string) => {
  return dict[lang][key] ?? key;
};

// React hook variant for convenience
export const useT = () => {
  const { lang } = useLanguage();
  return (key: string) => translate(lang, key);
};

